[{"C:\\Users\\cchik\\myProjects\\slider-app\\src\\index.js":"1","C:\\Users\\cchik\\myProjects\\slider-app\\src\\data.js":"2","C:\\Users\\cchik\\myProjects\\slider-app\\src\\App.js":"3"},{"size":222,"mtime":1606824302146,"results":"4","hashOfConfig":"5"},{"size":1433,"mtime":1606824506973,"results":"6","hashOfConfig":"5"},{"size":1586,"mtime":1606931872371,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vmpzyr",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\Users\\cchik\\myProjects\\slider-app\\src\\index.js",[],"C:\\Users\\cchik\\myProjects\\slider-app\\src\\data.js",[],"C:\\Users\\cchik\\myProjects\\slider-app\\src\\App.js",["15","16","17"],"\nimport React, { useState, useEffect } from 'react';\nimport { FiChevronRight, FiChevronLeft } from 'react-icons/fi';\nimport { FaQuoteRight } from 'react-icons/fa';\nimport data from './data';\n\n\nfunction App() {\n\n  const [people, setPeople] = useState(data)\n  const [index, setIndex] = useState(0) \n\n  useEffect(()=>{\nconst lastIndex = people.length - 1\nif(index < 0) {\n  setIndex(lastIndex)\n  }\nif(index > lastIndex) {\n  setIndex(0)\n}\n  }, [index, people])\n\nuseEffect(()=> {\n  setInterval(()=> {\n    setIndex(index + 1)\n  }, 3000)\n}, [index])\n\n\n  return (\n  <section className='section'>\n  <div className=\"title\">\n    <h2>\n      <span>/</span>reviews\n    </h2>\n  </div>\n  <div className=\"section-center\">\n    {people.map((person, personIndex)=>{\n      const {id, image, name, title, quote} = person; \n    let position = 'nextSlide' \n    if(personIndex === index) {\n      position = 'activeSlide'\n    }\n    if (personIndex === index - 1 || index === 0 && personIndex === people.length - 1 ) {\n      position = 'lastSlide'\n    }\n      return (\n        <article className={position} key ={id}>\n        <img src={image} alt={name} className='person-img'/>\n        <h4>{name}</h4>\n        <p className=\"title\">{title}</p>\n        <p className=\"text\">{quote}</p>\n        <FaQuoteRight className='icon' />\n        </article>\n      )\n    })}\n    <button className='prev' onClick={() => setIndex(index - 1)}>\n      <FiChevronLeft/>\n    </button>\n    <button className='next'onClick={() => setIndex(index +1)} >\n      <FiChevronRight/>\n    </button>\n  </div>\n  </section>\n)\n}\n\nexport default App;\n",{"ruleId":"18","severity":1,"message":"19","line":10,"column":18,"nodeType":"20","messageId":"21","endLine":10,"endColumn":27},{"ruleId":"22","severity":1,"message":"23","line":44,"column":35,"nodeType":"24","messageId":"25","endLine":44,"endColumn":37},{"ruleId":"22","severity":1,"message":"23","line":44,"column":50,"nodeType":"24","messageId":"25","endLine":44,"endColumn":52},"no-unused-vars","'setPeople' is assigned a value but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator"]